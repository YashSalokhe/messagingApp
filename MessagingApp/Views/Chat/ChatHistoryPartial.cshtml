@model IEnumerable<MessagingApp.Models.Chat>

@{
    var userName = User.Identity.Name;
    var reciever = @ViewBag.CurrentReceiver;
    
}
      
        <div class="header-chat">
         @* <i class="icon fa fa-user-o" aria-hidden="true"></i>*@
          <p class="name">@reciever</p>
          @*<i class="icon clickable fa fa-ellipsis-h right" aria-hidden="true"></i>*@
        </div>
        <div class="chat" >
            @if (Model != null)
            {
                
                @foreach(var message in Model.OrderBy(m=>m.CurrentTime))
                {
                    
                    string containerClass, timePosition, textAlign, fontColor, offset;
                    if(userName == message.SenderId)
                    {
                        containerClass = "container darker";
                        timePosition = "time-right text-dark";
                        textAlign = "text-right text-black";
                        fontColor = "bg-primary";
                        offset = "col-md-8 offset-md-8";

                    }
                    else
                    {
                        containerClass = "container";
                        timePosition = "time-left";
                        textAlign = "text-left";
                        fontColor = "bg-light";
                        offset = "";
                        
                    }
                    <div class="row">
                        <div class="@offset">
                            <div class="@containerClass" @fontColor>
                                <p class="sender @textAlign">@message.SenderId </p>
                                <p class = "@textAlign" >@message.Message</p>
                                <p class="@timePosition">@message.CurrentTime.ToString("t")</p>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        <div class="row">
            
            <form id="messageForm">
               @* <div class="form-group">*@
                <input type="text" class="write-message" id="message"/>
                <input type="button" onclick="sendMessage(event)" value ="Send" class="btn btn-danger"/>
                <i class="icon fa fa-smile-o clickable" style="font-size:25pt;" aria-hidden="true"></i>
          <i class="icon send fa fa-paper-plane-o clickable" aria-hidden="true"></i>
          
            @*</div>*@

            </form>
            
            <input type="hidden" value="@userName" name="username"/>
           

        </div>
    
 <script src="~/js/signalr/signalr.js"></script>
 <script src="~/js/signalr/signalrClient.js"></script>
 <script>
     var connection = new signalR.HubConnectionBuilder().withUrl("chatHub").build();

var _connectionId = '';
connection.on("RecieveMessage", function (data) {
    console.log("this is recieved data - ", data);
    console.log(data.senderId);
    var message = document.createElement("div")
    message.classList.add('row')


    var senderId = document.createElement("p")
    senderId.appendChild(document.createTextNode(data.SenderId))
    var msg = document.createElement("p")
    msg.appendChild(document.createTextNode(data.Message))
    var time = document.createElement("p")
    time.appendChild(document.createTextNode(data.CurrentTime))

    message.appendChild(senderId);
    message.appendChild(msg);
    message.appendChild(time);


    var body = document.querySelector('.chat')
    body.append(message);
    debugger;
});

function sendMessage(event) {
    
    var msg = $("#message").val();
    
    const form = document.getElementById('messageForm');
    event.preventDefault();
    $.ajax({
        type: "POST",
        url: "../Chat/Message",
        data: { "Message": msg },
        success: function (data) {
            console.log('msg send' , data)
        },
        error: function () {
            console.log("not send")
        }
    });

    form.reset();
}



connection.start().then(function () {
    connection.invoke('getConnectionId')
        .then(function (connectionId) {
            _connectionId = connectionId
            connection.invoke('JoinRoom', '@ViewBag.CurrentReceiver');
            console.log("connection established")
        })
})
    .catch(function (err) {
        console.log(err)
    })
       </Script>
